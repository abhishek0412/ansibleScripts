# --- represents this file as a playbook
---
# Use [space]play[space] where play is combination of hosts+tasks
 - name: Install apache httpd
    hosts: all
   # Become root user
   become: yes
   # List of tasks to be execute
   tasks:
    - name: Install apache httpd  (state=present is optional)
      ansible.builtin.apt:
        name: apache2
        state: present

    - name: Update repositories cache and install "mysql-server" package
      ansible.builtin.apt:
        name: mysql-server
        update_cache: yes

    - name: Remove "mysql-server" package
      ansible.builtin.apt:
        name: mysql-server
        state: absent

    - name: Install the package "mysql-server"
      ansible.builtin.apt:
        name: mysql-server

    - name: Install a list of packages of tree and php
      ansible.builtin.apt:
        pkg:
        - tree
        - php

    - name: Remove "php" package
      ansible.builtin.apt:
        name: php
        state: absent

    - name: Update all packages to their latest version
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Upgrade the OS (apt-get dist-upgrade)
      ansible.builtin.apt:
        upgrade: dist

    - name: Run the equivalent of "apt-get update" as a separate step
      ansible.builtin.apt:
        update_cache: yes

    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Pass options to dpkg on run
      ansible.builtin.apt:
        upgrade: dist
        update_cache: yes
        dpkg_options: 'force-confold,force-confdef'

    - name: Remove useless packages from the cache
      ansible.builtin.apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      ansible.builtin.apt:
        autoremove: yes

    - name: Run the equivalent of "apt-get clean" as a separate step
      apt:
        clean: yes